apply plugin: 'com.android.library'

version "1.0.8"

android {
    compileSdkVersion 23

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 23
        ndkVersion '21.4.7075529'
        externalNativeBuild {
            ndkBuild {
                cppFlags ''
            }
        }
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug {

            buildConfigField "boolean", "LOG_FLAG", "true"
            buildConfigField "String", "TAG", "\"ECSparkLiveKit\""
        }

        release {
            minifyEnabled false

            buildConfigField "boolean", "LOG_FLAG", "false"
            buildConfigField "String", "TAG", "\"ECSparkLiveKit\""
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }



    sourceSets { main { res.srcDirs = ['src/main/res', 'src/main/res/xml'] } }
    externalNativeBuild {
        ndkBuild {
            path file('../jni/Android.mk')
        }
    }

}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    api 'com.android.support:appcompat-v7:23.4.0'
    api 'com.android.support:support-v4:23.4.0'
    api 'junit:junit:4.12'
}

task clearJar(type: Delete) {
    delete 'build/outputs/ECSparkLiveKit-' + version + '.jar'
}

task makeJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('build/outputs/')
    include('classes.jar')
    rename('classes.jar', 'ECSparkLiveKit-' + version + '.jar')
}


makeJar.dependsOn(clearJar, build)